from typing import List, Optional, Dict, Any
from pydantic import BaseModel
{% for import in imports %}
{{ import }}
{% endfor %}

class {{ class_name }}(BaseModel):
{% for field in fields %}
    {{ field.name }}: {{ field.type }} {% if field.nullable %}= None{% endif %}

{% endfor %}

    def __init__(self{% for field in fields %}, {{ field.name }}: {{ field.type }} {% if field.nullable %}= None{% endif %}{% endfor %}):
{% for field in fields %}
        self.{{ field.name }} = {{ field.name }}
{% else %}
        pass
{% endfor %}

